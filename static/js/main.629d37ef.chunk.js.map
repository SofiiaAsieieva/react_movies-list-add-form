{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/Input.jsx","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","firstLetterUpperCase","string","toUpperCase","slice","Input","props","inputValue","inputError","controlHandle","onChangedInput","Object","keys","stateValue","type","name","placeholder","value","onBlur","onChange","isValidUrl","url","test","NewMovie","state","error","disabledSubmit","event","target","setState","prevState","handleSubmit","preventDefault","onAdd","onSubmit","this","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.629d37ef.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction firstLetterUpperCase(string) {\n  return string[0].toUpperCase() + string.slice(1);\n}\n\nexport const Input = (props) => {\n  const { inputValue, inputError, controlHandle, onChangedInput } = props;\n\n  return (\n    <div>\n      {Object.keys(inputValue).map(stateValue => (\n        <label key={stateValue}>\n          <p className=\"form__title\">\n            {`\n              ${firstLetterUpperCase(stateValue)}\n              `}\n          </p>\n          <input\n            type=\"text\"\n            name={stateValue}\n            className={(inputError[stateValue])\n              ? 'form__input input-error'\n              : 'form__input'\n            }\n            placeholder={firstLetterUpperCase(stateValue)}\n            value={inputValue[stateValue]}\n            onBlur={controlHandle}\n            onChange={onChangedInput}\n          />\n          {inputError[stateValue] && (\n            <p className=\"error\">\n              {`Please enter\n                ${firstLetterUpperCase(stateValue)}\n                `}\n            </p>\n          )}\n        </label>\n      ))}\n    </div>\n  );\n};\n\nInput.propTypes = {\n  controlHandle: PropTypes.func.isRequired,\n  onChangedInput: PropTypes.func.isRequired,\n  inputValue: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n    imdbId: PropTypes.string.isRequired,\n  }).isRequired,\n  inputError: PropTypes.shape({\n    title: PropTypes.bool.isRequired,\n    description: PropTypes.bool.isRequired,\n    imgUrl: PropTypes.bool.isRequired,\n    imdbUrl: PropTypes.bool.isRequired,\n    imdbId: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from './Input';\n\nfunction isValidUrl(url) {\n  // eslint-disable-next-line max-len\n  const validUrl = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  return validUrl.test(url);\n}\n\nexport class NewMovie extends Component {\n  state = {\n    inputValue: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    error: {\n      title: false,\n      description: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n    disabledSubmit: false,\n  };\n\n  controlHandle = (event) => {\n    const { name, value } = event.target;\n    const { title, imgUrl, imdbUrl, imdbId } = this.state.inputValue;\n\n    if (\n      !title\n      || !isValidUrl(imgUrl)\n      || !isValidUrl(imdbUrl)\n      || !imdbId\n    ) {\n      this.setState({ disabledSubmit: true });\n    }\n\n    switch (name) {\n      case 'imgUrl':\n      case 'imdbUrl':\n        this.setState(prevState => ({\n          error: {\n            ...prevState.error,\n            [name]: !isValidUrl(value),\n          },\n        }));\n        break;\n\n      case 'title':\n      case 'imdbId':\n        this.setState(prevState => ({\n          error: {\n            ...prevState.error,\n            [name]: value === '',\n          },\n        }));\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.onAdd(this.state.inputValue);\n\n    this.setState({\n      inputValue: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  }\n\n  onChangedInput = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      inputValue: {\n        ...prevState.inputValue,\n        [name]: value,\n      },\n      disabledSubmit: false,\n      error: {\n        ...prevState.error,\n        [name]: false,\n      },\n    }));\n  }\n\n  render() {\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className=\"form\"\n      >\n        <Input\n          inputValue={this.state.inputValue}\n          inputError={this.state.error}\n          controlHandle={this.controlHandle}\n          onChangedInput={this.onChangedInput}\n        />\n\n        <button\n          type=\"submit\"\n          disabled={this.state.disabledSubmit}\n          className=\"form__button\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({ movies: [movie, ...prevState.movies] }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}